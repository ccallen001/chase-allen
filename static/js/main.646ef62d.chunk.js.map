{"version":3,"sources":["components/Header/Header.tsx","components/Nav/Nav.tsx","store/store.ts","views/Home/Home.tsx","assets/images/chase.jpeg","views/About/About.tsx","views/Games/SpaceInvaders/SpaceInvaders.tsx","views/Games/Games.tsx","views/View.tsx","app/App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Header","className","Nav","to","activeClassName","exact","initialState","count","user","name","store","configureStore","reducer","state","action","type","payload","Home","console","log","getState","dispatch","About","src","chase","alt","SpaceInvaders","moveShooter","shoot","useEffect","gameLoop","resultsDisplay","document","querySelector","currentShooterIndex","gridWidth","direction","goingRight","aliensRemoved","score","squares","querySelectorAll","alienInvaders","Array","from","length","_","i","draw","includes","classList","add","e","remove","key","addEventListener","setInterval","leftEdge","rightEdge","contains","textContent","clearInterval","laser","currentLaserIndex","setTimeout","alienRemoved","indexOf","push","toString","map","onClick","Games","path","View","App","data-testid","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.646ef62d.chunk.js","sourcesContent":["import './Header.scss';\n\nfunction Header() {\n  return (\n    <header className=\"Header\">\n        <h1 className=\"Header-text\">Chase Allen</h1>\n      </header>\n  );\n}\n\nexport default Header;","import { NavLink } from 'react-router-dom';\n\nimport './Nav.scss';\n\nfunction Nav() {\n  return (\n    <nav className=\"component Nav\">\n      <NavLink to=\"/\" activeClassName=\"active-route\" exact>\n        Home\n      </NavLink>\n      <NavLink to=\"/about\" activeClassName=\"active-route\" exact>\n        About\n      </NavLink>\n      <NavLink to=\"/games\" activeClassName=\"active-route\" exact>\n        Games\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import { configureStore } from '@reduxjs/toolkit';\n\ninterface State {\n  count: number;\n  user: {\n    name: string;\n  };\n}\n\ntype Action = {\n  type: string;\n  payload?: any;\n};\n\nconst initialState: State = {\n  count: 0,\n  user: {\n    name: 'Chase'\n  }\n};\n\nfunction count(state = initialState, action: Action) {\n  if (action.type === 'incrementCount') {\n    return {\n      ...state,\n      count: state.count + 1\n    };\n  }\n\n  if (action.type === 'decrementCount') {\n    return {\n      ...state,\n      count: state.count - 1\n    };\n  }\n\n  return state;\n}\n\nfunction user(state = initialState, action: Action) {\n  if (action.type === 'setUser') {\n    return {\n      ...state,\n      user: {\n        name: action.payload || state.user.name\n      }\n    };\n  }\n\n  return state;\n}\n\nconst store = configureStore({\n  reducer: {\n    count,\n    user\n  }\n});\n\nexport default store;\n","import store from '../../store/store';\n\nimport './Home.scss';\n\nfunction Home() {\n  console.log(store.getState());\n  store.dispatch({ type: 'incrementCount' });\n  store.dispatch({ type: 'setUser', payload: 'Fake Chase' });\n  console.log(store.getState());\n\n  return (\n    <div className=\"view Home\">\n      <h3 className=\"view-title\">Home</h3>\n      <p className=\"msg\">\n        <span className=\"hand\">ðŸ‘‹</span> Hey, I'm Chase!\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/chase.724f11d1.jpeg\";","import chase from '../../assets/images/chase.jpeg';\n\nimport './About.scss';\n\nfunction About() {\n  return (\n    <div className=\"view About\">\n      <h3 className=\"view-title\">About</h3>\n      <img src={chase} alt=\"Chase Allen\" />\n    </div>\n  );\n}\n\nexport default About;\n","import { useEffect } from 'react';\n\nimport './SpaceInvaders.scss';\n\nfunction SpaceInvaders() {\n  let moveShooter: any;\n  let shoot: any;\n\n  useEffect(() => {\n    const resultsDisplay = document.querySelector('.results');\n\n    let currentShooterIndex = 200;\n    let gridWidth = 15;\n    let direction = 1;\n    let goingRight = true;\n    let aliensRemoved: any[] = [];\n    let score = 0;\n    let gameLoop: any;\n\n    const squares = document.querySelectorAll('.grid div');\n\n    const alienInvaders = Array.from({ length: 38 }, (_, i) => i);\n\n    function draw() {\n      for (let i = 0; i < alienInvaders.length; i++) {\n        if (!aliensRemoved.includes(i)) {\n          squares[alienInvaders[i]]?.classList.add('invader');\n        }\n      }\n    }\n\n    draw();\n\n    function remove() {\n      for (let i = 0; i < alienInvaders.length; i++) {\n        squares[alienInvaders[i]]?.classList.remove('invader');\n      }\n    }\n\n    squares[currentShooterIndex]?.classList.add('shooter');\n\n    moveShooter = (e: KeyboardEvent) => {\n      squares[currentShooterIndex]?.classList.remove('shooter');\n\n      switch (e.key) {\n        case 'ArrowLeft':\n          if (currentShooterIndex % gridWidth !== 0) {\n            currentShooterIndex -= 1;\n          }\n\n          break;\n        case 'ArrowRight':\n          if (currentShooterIndex % gridWidth < gridWidth - 1) {\n            currentShooterIndex += 1;\n          }\n\n          break;\n      }\n\n      squares[currentShooterIndex]?.classList.add('shooter');\n    };\n\n    document.addEventListener('keydown', moveShooter);\n\n    function moveInvaders() {\n      const leftEdge = alienInvaders[0] % gridWidth === 0;\n      const rightEdge =\n        alienInvaders[alienInvaders.length - 1] % gridWidth === gridWidth - 1;\n\n      remove();\n\n      if (rightEdge && goingRight) {\n        for (let i = 0; i < alienInvaders.length; i++) {\n          alienInvaders[i] += gridWidth + 1;\n          direction = -1;\n          goingRight = false;\n        }\n      }\n\n      if (leftEdge && !goingRight) {\n        for (let i = 0; i < alienInvaders.length; i++) {\n          alienInvaders[i] += gridWidth - 1;\n          direction = 1;\n          goingRight = true;\n        }\n      }\n\n      for (let i = 0; i < alienInvaders.length; i++) {\n        alienInvaders[i] += direction;\n      }\n\n      draw();\n\n      if (\n        resultsDisplay &&\n        squares[currentShooterIndex]?.classList.contains('invader')\n      ) {\n        resultsDisplay.textContent = 'Game Over';\n        clearInterval(gameLoop);\n      }\n\n      for (let i = 0; i < alienInvaders.length; i++) {\n        if (resultsDisplay && alienInvaders[i] > squares.length) {\n          resultsDisplay.textContent = 'Game Over';\n          clearInterval(gameLoop);\n        }\n      }\n\n      if (resultsDisplay && aliensRemoved.length === alienInvaders.length) {\n        resultsDisplay.textContent = 'You Win!';\n        clearInterval(gameLoop);\n      }\n    }\n\n    gameLoop = setInterval(moveInvaders, 500);\n\n    shoot = (e: KeyboardEvent) => {\n      let laser: any;\n      let currentLaserIndex = currentShooterIndex;\n\n      function moveLaser() {\n        squares[currentLaserIndex]?.classList.remove('laser');\n        currentLaserIndex -= gridWidth;\n        squares[currentLaserIndex]?.classList.add('laser');\n\n        if (\n          resultsDisplay &&\n          squares[currentLaserIndex]?.classList.contains('invader')\n        ) {\n          squares[currentLaserIndex]?.classList.remove('laser');\n          squares[currentLaserIndex]?.classList.remove('invader');\n          squares[currentLaserIndex]?.classList.add('boom');\n\n          setTimeout(\n            () => squares[currentLaserIndex]?.classList.remove('boom'),\n            100\n          );\n\n          clearInterval(laser);\n\n          const alienRemoved = alienInvaders.indexOf(currentLaserIndex);\n          aliensRemoved.push(alienRemoved);\n          score++;\n          resultsDisplay.textContent = score.toString();\n        }\n      }\n\n      switch (e.key) {\n        case 'ArrowUp':\n          laser = setInterval(moveLaser, 100);\n      }\n    };\n\n    document.addEventListener('keydown', shoot);\n  });\n\n  return (\n    <div className=\"game SpaceInvaders\">\n      <h4 className=\"game-title\">Space Invaders</h4>\n      <h2 className=\"results\">0</h2>\n      <div className=\"grid\">\n        {Array.from({ length: 225 }).map((_, i) => (\n          <div key={i}></div>\n        ))}\n      </div>\n      <div className=\"controls\">\n        <div className=\"left-right\">\n          <button onClick={() => moveShooter({ key: 'ArrowLeft' })}>\n            {'<'}\n          </button>\n          <button onClick={() => moveShooter({ key: 'ArrowRight' })}>\n            {'>'}\n          </button>\n        </div>\n        <button onClick={() => shoot({ key: 'ArrowUp' })}>{'^'}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default SpaceInvaders;\n","import { NavLink, Route } from 'react-router-dom';\n\nimport SpaceInvaders from './SpaceInvaders/SpaceInvaders';\n\nimport './Games.scss';\n\nfunction Games() {\n  return (\n    <div className=\"view Games\">\n      <h3 className=\"view-title\">Games</h3>\n      <nav>\n        <NavLink to=\"/games/space-invaders\" exact>\n          Space Invaders\n        </NavLink>\n      </nav>\n\n      <Route path=\"/games/space-invaders\" exact>\n        <SpaceInvaders />\n      </Route>\n    </div>\n  );\n}\n\nexport default Games;\n","import { Switch, Route } from 'react-router-dom';\n\nimport Home from './Home/Home';\nimport About from './About/About';\nimport Games from './Games/Games';\n\nimport './View.scss';\n\nfunction View() {\n  return (\n    <div className=\"view\">\n      \n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        <Route path=\"/games\">\n          <Games />\n        </Route>\n\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default View;\n","import Header from '../components/Header/Header';\nimport Nav from '../components/Nav/Nav';\nimport View from '../views/View';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\" data-testid=\"App\">\n      <Header />\n      <Nav />\n      <View />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport App from './app/App';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}